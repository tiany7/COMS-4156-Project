syntax = "proto3";
package person;

enum Affiliation {
    Computer_Science = 0;
    Chemical_Engineering = 1;
}

enum School {
    Columbia_Engineering = 0;
    Teachers_College = 1;
}

message Student {
    string uni = 1;
    string name = 2;
    string email = 3;
    string affiliation = 4;
    string school = 5;
    string advisor = 6;
}

message StudentReadRequest {
    string table = 1;
    string uni = 2;
}

message StudentReadResponse {
    Student student = 1;
    string message = 2;
}

message Faculty {
    string uni = 1;
    string name = 2;
    string email = 3;
    string school = 4;
}

message FacultyReadRequest {
    string table = 1;
    string uni = 2;
}

message FacultyReadResponse {
    Faculty faculty = 1;
    string message = 2;
}

message Administrator {
    string uni = 1;
    string name = 2;
    string email = 3;
}

message AdministratorReadRequest {
    string table = 1;
    string uni = 2;
}

message AdministratorReadResponse {
    Administrator administrator = 1;
    string message = 2;
}

message UpdateEmailRequest {
    string table = 1;
    string uni = 2;
    string email = 3;
}

message UpdateEmailResponse {
    string message = 1;
    string email = 2;
}

message CreatePersonResponse {
    string message = 1;
}

message DeletePersonRequest {
    string uni = 1;
}

message DeletePersonResponse {
    string message = 1;
}

message CreateFacultyRatingRequest {
    string uni = 1;
    string name = 2;
    uint32 score = 3;
    string comment = 4;  
}

message CreateFacultyRatingResponse {
    string message = 1;
}

message GetFacultyRatingRequest {
    string uni = 1;
}

message GetFacultyRatingResponse {
    double score = 1;
    repeated string comments = 2;
    string message = 3;
}

service PersonService {
    rpc ReadStudentInfo(StudentReadRequest) returns (StudentReadResponse);
    rpc ReadFacultyInfo(FacultyReadRequest) returns (FacultyReadResponse);
    rpc ReadAdministratorInfo(AdministratorReadRequest) returns (AdministratorReadResponse);
    rpc UpdateEmail(UpdateEmailRequest) returns (UpdateEmailResponse);
    rpc CreateStudent(Student) returns (CreatePersonResponse);
    rpc CreateAdministrator(Administrator) returns (CreatePersonResponse);
    rpc DeleteStudent(DeletePersonRequest) returns (DeletePersonResponse);
    rpc CreateFacultyRating(CreateFacultyRatingRequest) returns (CreateFacultyRatingResponse);
    rpc GetFacultyRating(GetFacultyRatingRequest) returns (GetFacultyRatingResponse);
}